Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;EmptyVector;ForwardQuery: (<init> $r2 = new Stack,$r2 (JJTJavaParserState.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;true;true;809265;28134;736;3795;true;true;0;2588905584;
ideal;EmptyVector;ForwardQuery: (<init> $r1 = new Stack,$r1 (JJTJspParserState.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;true;true;641430;5750;166;3795;true;true;0;2872443768;
ideal;EmptyVector;ForwardQuery: (<init> $r1 = new Stack,$r1 (JJTJavaParserState.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;true;true;872086;28090;736;3795;true;true;0;5215129144;
ideal;EmptyVector;ForwardQuery: (<init> $r6 = new Vector,$r6 (JspParser.<init>) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.jsp.ast.JspParser: void <init>(net.sourceforge.pmd.jsp.ast.CharStream)>;net.sourceforge.pmd.jsp.ast.JspParser;true;true;679079;4747;163;3795;true;true;0;5505616864;
ideal;EmptyVector;ForwardQuery: (sizeClause $r4 = new Vector,$r4 (ConfigFile.sizeClause) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;30806;238;14;3795;true;false;0;5510023392;
ideal;EmptyVector;ForwardQuery: (<init> $r2 = new Stack,$r2 (Structure.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;false;true;3378433;3583;299;3795;true;true;0;5690362200;
ideal;EmptyVector;ForwardQuery: (addVariableAccess $r6 = new Vector,$r6 (VariableAccessVisitor.addVariableAccess) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: void addVariableAccess(int,net.sourceforge.pmd.dfa.variableaccess.VariableAccess,java.util.List)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;true;634816;10350;497;3795;true;true;0;7302311352;
ideal;EmptyVector;ForwardQuery: (<init> $r1 = new Stack,$r1 (ScopeAndDeclarationFinder.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder: void <init>()>;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder;true;true;806530;1597;272;3795;true;false;0;7340116448;
ideal;EmptyVector;ForwardQuery: (<init> $r3 = new Stack,$r3 (Structure.<init>) Value: new java.util.Stack);$r3 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;false;true;7472697;3584;299;3795;true;true;0;7499984552;
ideal;EmptyVector;ForwardQuery: (vectorise $r3 = new Vector,$r3 (TestHarness.vectorise) Value: new java.util.Vector);$r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;true;false;87810;240;14;3795;true;false;0;7504037528;
ideal;EmptyVector;ForwardQuery: (<init> $r6 = new Vector,$r6 (JavaParser.<init>) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.ast.JavaParser: void <init>(net.sourceforge.pmd.ast.CharStream)>;net.sourceforge.pmd.ast.JavaParser;true;true;1769026;21276;736;3795;true;true;0;8298006000;
ideal;EmptyVector;ForwardQuery: (<init> $r2 = new Stack,$r2 (JJTJspParserState.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;true;true;841469;5772;166;3795;true;true;0;8434690216;
ideal;EmptyVector;ForwardQuery: (<init> $r4 = new Vector,$r4 (ConfigFile.<init>) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;true;false;156372;800;34;3795;true;true;0;8442471704;
