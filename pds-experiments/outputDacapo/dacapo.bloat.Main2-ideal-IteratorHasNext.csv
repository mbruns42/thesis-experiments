Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;IteratorHasNext;ForwardQuery: (toString $r8.iterator(),r98 (CachingBloatContext.toString) Value: interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>());r98 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;17460;184;5;4467;true;false;0;274198392;
ideal;IteratorHasNext;ForwardQuery: (equals r3.iterator(),r5 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;5932;91;5;4467;true;false;0;281557960;
ideal;IteratorHasNext;ForwardQuery: (equals r4.iterator(),r6 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;7504;90;5;4467;true;false;0;288201904;
ideal;IteratorHasNext;ForwardQuery: (<init> $r6.iterator(),$r7 (Liveness$1.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)>;EDU.purdue.cs.bloat.codegen.Liveness$1;true;false;8376;479;9;4467;true;true;0;294820384;
ideal;IteratorHasNext;ForwardQuery: (splitIrreducibleLoops $r6.iterator(),r16 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r16 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;2503;54;4;4467;true;false;0;296647432;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r139.iterator(),r145 (FlowGraph.peelLoops) Value: interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>());r145 = interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;10865;374;5;4467;true;false;0;310678344;
ideal;IteratorHasNext;ForwardQuery: (visitBlock $r11.iterator(),r2 (FlowGraph$6.visitBlock) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph$6;false;false;5627;92;4;4467;true;false;0;313576064;
ideal;IteratorHasNext;ForwardQuery: (visitNode $r15.iterator(),r53 (SSAGraph$5.visitNode) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;3320;126;5;4467;true;false;0;317524048;
ideal;IteratorHasNext;ForwardQuery: (visitNode r57.iterator(),r59 (SSAGraph$5.visitNode) Value: virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>());r59 = virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;5723;74;5;4467;true;false;0;322640640;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r89.iterator(),r142 (FlowGraph.peelLoops) Value: interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>());r142 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;24036;401;4;4467;true;false;0;348675872;
ideal;IteratorHasNext;ForwardQuery: (calcFrontier r24.iterator(),r25 (DominanceFrontier.calcFrontier) Value: virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;8055;113;7;4467;true;false;0;353101448;
ideal;IteratorHasNext;ForwardQuery: (<init> $r13.iterator(),r177 (RegisterAllocator.<init>) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r177 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;10281;53;4;4467;true;false;0;356796128;
ideal;IteratorHasNext;ForwardQuery: (print $r12.iterator(),r26 (MethodEditor.print) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r26 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;12546;57;7;4467;true;false;0;362184320;
ideal;IteratorHasNext;ForwardQuery: (buildCode $r25.iterator(),r231 (CodeArray.buildCode) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r231 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;20873;401;7;4467;true;false;0;383768104;
ideal;IteratorHasNext;ForwardQuery: (enqueueParents $r12.iterator(),r5 (SSAPRE.enqueueParents) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;5308;75;7;4467;true;false;0;387689944;
ideal;IteratorHasNext;ForwardQuery: (iterator r0.iterator(),r1 (Tree$StmtList.iterator) Value: specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.tree.Tree$StmtList;true;true;2723031;25772;870;4467;true;true;0;2059932232;
ideal;IteratorHasNext;ForwardQuery: (visitBlock $r46.iterator(),r59 (VerifyCFG.visitBlock) Value: interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;13974;150;5;4467;true;false;0;2063072792;
ideal;IteratorHasNext;ForwardQuery: (buildTree $r7.iterator(),r76 (DominatorTree.buildTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;16703;118;4;4467;true;false;0;2067000080;
ideal;IteratorHasNext;ForwardQuery: (visitTree $r4.iterator(),$r5 (CodeGenerator$3.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$3: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$3;true;true;1727402;24678;844;4467;true;true;0;3364736240;
ideal;IteratorHasNext;ForwardQuery: (removeCriticalEdges $r5.iterator(),r2 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;14115;70;4;4467;true;false;0;3366613456;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r16.iterator(),r88 (Liveness.computeIntersections) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r88 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;35878;219;7;4467;true;false;0;3372296976;
ideal;IteratorHasNext;ForwardQuery: (buildCode $r19.iterator(),r210 (CodeArray.buildCode) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r210 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;119481;590;7;4467;true;false;0;3393745224;
ideal;IteratorHasNext;ForwardQuery: (codeMotion $r16.iterator(),r61 (SSAPRE.codeMotion) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r61 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;33171;57;5;4467;true;false;0;3398104736;
ideal;IteratorHasNext;ForwardQuery: (coalesce $r4.iterator(),r2 (RegisterAllocator$IGNode.coalesce) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;17137;50;5;4467;true;false;0;3400149672;
ideal;IteratorHasNext;ForwardQuery: (splitEdge $r21.iterator(),r6 (FlowGraph.splitEdge) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;17532;62;5;4467;true;false;0;3402044248;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r16.iterator(),r3 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;21817;76;5;4467;true;false;0;3405454112;
ideal;IteratorHasNext;ForwardQuery: (toString r1.iterator(),r2 (ValueNumbering$Tuple.toString) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;21978;60;5;4467;true;false;0;3408723160;
ideal;IteratorHasNext;ForwardQuery: (resetLater $r10.iterator(),r3 (SSAPRE.resetLater) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;27118;34;4;4467;true;false;0;3410354456;
ideal;IteratorHasNext;ForwardQuery: (equals r4.iterator(),r29 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r29 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;90164;60;5;4467;true;false;0;3417043256;
ideal;IteratorHasNext;ForwardQuery: (propExpr $r11.iterator(),r32 (ExprPropagation.propExpr) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;36422;51;5;4467;true;false;0;3420630464;
ideal;IteratorHasNext;ForwardQuery: (computeLater $r8.iterator(),r17 (SSAPRE.computeLater) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37492;36;4;4467;true;false;0;3423340352;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r7.iterator(),r2 (ReplaceVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.ReplaceVisitor;true;false;16850;59;5;4467;true;false;0;3425957616;
ideal;IteratorHasNext;ForwardQuery: (makeEquiv r4.iterator(),r5 (SSAGraph.makeEquiv) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;16014;50;5;4467;true;false;0;3428564072;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r14.iterator(),r86 (Liveness.computeIntersections) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r86 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;17157;199;4;4467;true;false;0;3431045440;
ideal;IteratorHasNext;ForwardQuery: (visitPhiStmt $r5.iterator(),r12 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;35797;105;8;4467;true;false;0;3436465976;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r38.iterator(),r171 (FlowGraph.peelLoops) Value: interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>());r171 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;36577;376;6;4467;true;false;0;3441959256;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r31.iterator(),r156 (FlowGraph.peelLoops) Value: interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>());r156 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;85909;401;4;4467;true;false;0;3447019656;
ideal;IteratorHasNext;ForwardQuery: (removeBlock $r20.iterator(),r34 (FlowGraph.removeBlock) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r34 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;23495;29;4;4467;true;false;0;3448408880;
ideal;IteratorHasNext;ForwardQuery: (insertProtectedRegionStores $r16.iterator(),r6 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;13905;71;5;4467;true;false;0;3450582400;
ideal;IteratorHasNext;ForwardQuery: (<init> r168.iterator(),r172 (RegisterAllocator.<init>) Value: virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>());r172 = virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;21795;177;5;4467;true;false;0;3457382880;
ideal;IteratorHasNext;ForwardQuery: (buildTree $r53.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;17097;446;4;4467;true;false;0;3461136448;
ideal;IteratorHasNext;ForwardQuery: (splitIrreducibleLoops r2.iterator(),r19 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r19 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;13762;86;5;4467;true;false;0;3463324632;
ideal;IteratorHasNext;ForwardQuery: (finalizeVisit $r30.iterator(),r4 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;15938;115;5;4467;true;false;0;3466382896;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r3 (ValueFolding$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueFolding$1;false;false;18359;79;5;4467;true;false;0;3469787880;
ideal;IteratorHasNext;ForwardQuery: (clear $r4.iterator(),r1 (Graph$EdgeSet.clear) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;16235;87;5;4467;true;false;0;3472659976;
ideal;IteratorHasNext;ForwardQuery: (placePhis r32.iterator(),r40 (SSAPRE.placePhis) Value: interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;11718;49;5;4467;true;false;0;3474669928;
ideal;IteratorHasNext;ForwardQuery: (splitIrreducibleLoops $r12.iterator(),r3 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;20578;113;4;4467;true;false;0;3477128136;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r57.iterator(),r170 (FlowGraph.peelLoops) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r170 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;71984;401;4;4467;true;false;0;3501530912;
ideal;IteratorHasNext;ForwardQuery: (buildCode r225.iterator(),r226 (CodeArray.buildCode) Value: interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>());r226 = interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;33938;467;5;4467;true;false;0;3510695832;
ideal;IteratorHasNext;ForwardQuery: (propExpr $r10.iterator(),r30 (ExprPropagation.propExpr) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;30233;62;5;4467;true;false;0;3513394328;
ideal;IteratorHasNext;ForwardQuery: (placePhiFunctions $r7.iterator(),r26 (SSA.placePhiFunctions) Value: interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;22396;75;5;4467;true;false;0;3516318960;
ideal;IteratorHasNext;ForwardQuery: (calcFrontier $r21.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;12880;110;5;4467;true;false;0;3518801688;
ideal;IteratorHasNext;ForwardQuery: (toString $r18.iterator(),r108 (CachingBloatContext.toString) Value: interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>());r108 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;62779;94;5;4467;true;false;0;3529030584;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r59.iterator(),r100 (Liveness.computeIntersections) Value: interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>());r100 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;27652;219;4;4467;true;false;0;3532210664;
ideal;IteratorHasNext;ForwardQuery: (rename r2.iterator(),r5 (SSAPRE.rename) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;64937;174;5;4467;true;false;0;3677619136;
ideal;IteratorHasNext;ForwardQuery: (buildLoopTree $r18.iterator(),r38 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;46821;109;4;4467;true;false;0;3679990976;
ideal;IteratorHasNext;ForwardQuery: (liveOut $r19.iterator(),r95 (Liveness.liveOut) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;26455;234;4;4467;true;false;0;3683165600;
ideal;IteratorHasNext;ForwardQuery: (visitNode r2.iterator(),r3 (VerifyCFG.visitNode) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;21722;49;5;4467;true;false;0;3686348704;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes r49.iterator(),r55 (FlowGraph.setBlockTypes) Value: interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>());r55 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;23512;157;5;4467;true;false;0;3691904088;
ideal;IteratorHasNext;ForwardQuery: (resetDownSafe $r8.iterator(),r5 (SSAPRE.resetDownSafe) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;17014;76;4;4467;true;false;0;3694122792;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r163.iterator(),r179 (FlowGraph.peelLoops) Value: interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>());r179 = interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;68037;378;7;4467;true;false;0;3707875144;
ideal;IteratorHasNext;ForwardQuery: (postIterationCleanup $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;13088;46;5;4467;true;false;0;3708946856;
ideal;IteratorHasNext;ForwardQuery: (insert_aswrange $r7.iterator(),r2 (InductionVarAnalyzer.insert_aswrange) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;false;false;13856;121;4;4467;true;false;0;3712119160;
ideal;IteratorHasNext;ForwardQuery: (iterator $r2.iterator(),r1 (Graph$1.iterator) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$1;true;false;812064;2728;65;4467;true;true;0;3822678512;
ideal;IteratorHasNext;ForwardQuery: (loadClass $r5.iterator(),r94 (ClassFileLoader.loadClass) Value: virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>());r94 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;34233;246;9;4467;true;false;0;3828356248;
ideal;IteratorHasNext;ForwardQuery: (ignoreClass $r5.iterator(),r2 (BloatContext.ignoreClass) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.context.BloatContext;true;false;12796;53;5;4467;true;false;0;3830402704;
ideal;IteratorHasNext;ForwardQuery: (addRetPhis $r4.iterator(),r2 (SSAConstructionInfo.addRetPhis) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.ssa.SSAConstructionInfo;false;false;16547;47;5;4467;true;false;0;3833008520;
ideal;IteratorHasNext;ForwardQuery: (commit $r15.iterator(),r139 (MethodEditor.commit) Value: virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>());r139 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;92042;261;7;4467;true;false;0;3844109328;
ideal;IteratorHasNext;ForwardQuery: (visitPhiStmt r2.iterator(),r14 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>());r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;false;false;35644;49;5;4467;true;false;0;3850357096;
ideal;IteratorHasNext;ForwardQuery: (idf r13.iterator(),r6 (FlowGraph.idf) Value: interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;15718;62;5;4467;true;false;0;3852459920;
ideal;IteratorHasNext;ForwardQuery: (commit r138.iterator(),r143 (MethodEditor.commit) Value: virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>());r143 = virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;22727;241;6;4467;true;false;0;3856385776;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r13.iterator(),r3 (Liveness$2.visitPhiJoinStmt) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.Liveness$2;false;false;28413;107;4;4467;true;false;0;3859361016;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes $r14.iterator(),r59 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;51656;83;5;4467;true;false;0;3865807104;
ideal;IteratorHasNext;ForwardQuery: (splitPhiBlocks $r24.iterator(),r6 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;25806;176;5;4467;true;false;0;3871309704;
ideal;IteratorHasNext;ForwardQuery: (<init> r160.iterator(),r166 (RegisterAllocator.<init>) Value: virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>());r166 = virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;25990;392;6;4467;true;false;0;3876811560;
ideal;IteratorHasNext;ForwardQuery: (buildTree r71.iterator(),r72 (DominatorTree.buildTree) Value: interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>());r72 = interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;true;false;11785;252;5;4467;true;false;0;3880173416;
ideal;IteratorHasNext;ForwardQuery: (array $r6.iterator(),r36 (CodeArray.array) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;22558;79;5;4467;true;false;0;3883417960;
ideal;IteratorHasNext;ForwardQuery: (removeUnreachable r1.iterator(),r40 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;77343;185;7;4467;true;false;0;3889192560;
ideal;IteratorHasNext;ForwardQuery: (<init> $r28.iterator(),r175 (RegisterAllocator.<init>) Value: interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;14412;207;4;4467;true;false;0;3892241584;
ideal;IteratorHasNext;ForwardQuery: (removeUnreachable $r12.iterator(),r4 (Peephole.removeUnreachable) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;53973;160;7;4467;true;false;0;3899570400;
ideal;IteratorHasNext;ForwardQuery: (splitReducibleLoops r50.iterator(),r52 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>());r52 = interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;11707;133;5;4467;true;false;0;3902091608;
ideal;IteratorHasNext;ForwardQuery: (downSafety $r11.iterator(),r5 (SSAPRE.downSafety) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;14781;89;4;4467;true;false;0;3904411152;
ideal;IteratorHasNext;ForwardQuery: (commit $r37.iterator(),r154 (MethodEditor.commit) Value: virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>());r154 = virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;86846;103;7;4467;true;false;0;3920542520;
ideal;IteratorHasNext;ForwardQuery: (setValueNumbers $r7.iterator(),r38 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;32263;105;8;4467;true;false;0;3928380544;
ideal;IteratorHasNext;ForwardQuery: (setValueNumbers $r20.iterator(),r28 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;26263;223;8;4467;true;false;0;3934559752;
ideal;IteratorHasNext;ForwardQuery: (buildLoopTree $r7.iterator(),r31 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;29175;84;4;4467;true;false;0;3936787536;
ideal;IteratorHasNext;ForwardQuery: (printSCCs r2.iterator(),r3 (SSAGraph.printSCCs) Value: interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;17355;76;5;4467;true;false;0;3938777160;
ideal;IteratorHasNext;ForwardQuery: (buildTrees $r25.iterator(),r4 (FlowGraph.buildTrees) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;26711;141;7;4467;true;false;0;3943488000;
ideal;IteratorHasNext;ForwardQuery: (beginTry $r10.iterator(),r2 (SSAPRE.beginTry) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;18122;74;5;4467;true;false;0;3946316736;
ideal;IteratorHasNext;ForwardQuery: (allocReturnAddresses $r6.iterator(),r3 (CodeGenerator.allocReturnAddresses) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;17165;51;5;4467;true;false;0;3948116856;
ideal;IteratorHasNext;ForwardQuery: (buildLists $r2.iterator(),r15 (Graph.buildLists) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;26481;99;7;4467;true;false;0;3952182648;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes r48.iterator(),r4 (FlowGraph.setBlockTypes) Value: interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30893;157;5;4467;true;false;0;3957668536;
ideal;IteratorHasNext;ForwardQuery: (release $r20.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;18389;55;5;4467;true;false;0;3960274104;
ideal;IteratorHasNext;ForwardQuery: (visitRetStmt $r7.iterator(),r3 (VerifyCFG.visitRetStmt) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;16231;52;5;4467;true;false;0;3963468592;
ideal;IteratorHasNext;ForwardQuery: (visitNode $r46.iterator(),r55 (SSAGraph$5.visitNode) Value: interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;28408;123;5;4467;true;false;0;3967236616;
ideal;IteratorHasNext;ForwardQuery: (buildLoopTree $r11.iterator(),r40 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;29724;44;4;4467;true;false;0;3969866112;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r25 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r25 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;37999;71;5;4467;true;false;0;3974849624;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r18.iterator(),r90 (Liveness.computeIntersections) Value: interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>());r90 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;45127;208;7;4467;true;false;0;3981874344;
ideal;IteratorHasNext;ForwardQuery: (codeMotion $r19.iterator(),r57 (SSAPRE.codeMotion) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r57 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;29464;155;5;4467;true;false;0;3985517600;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r4.iterator(),r2 (CodeGenerator$5.visitFlowGraph) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;18457;46;5;4467;true;false;0;3988710120;
ideal;IteratorHasNext;ForwardQuery: (placePhis $r25.iterator(),r35 (SSAPRE.placePhis) Value: interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>());r35 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;28569;91;5;4467;true;false;0;3991782240;
ideal;IteratorHasNext;ForwardQuery: (computeLater $r6.iterator(),r14 (SSAPRE.computeLater) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;29449;49;4;4467;true;false;0;3993535752;
ideal;IteratorHasNext;ForwardQuery: (beginTry r5.iterator(),r25 (SSAPRE.beginTry) Value: virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>());r25 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;18655;77;5;4467;true;false;0;3996613168;
ideal;IteratorHasNext;ForwardQuery: (computeCanBeAvail $r9.iterator(),r2 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;18801;37;4;4467;true;false;0;3998253344;
ideal;IteratorHasNext;ForwardQuery: (visitPhiCatchStmt $r8.iterator(),r3 (CodeGenerator$5.visitPhiCatchStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;17328;118;5;4467;true;false;0;4002097936;
ideal;IteratorHasNext;ForwardQuery: (toString $r22.iterator(),r112 (CachingBloatContext.toString) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r112 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;53202;58;5;4467;true;false;0;4015292656;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r138.iterator(),r151 (FlowGraph.peelLoops) Value: interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>());r151 = interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;29003;374;5;4467;true;false;0;4029823872;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r6.iterator(),r20 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;true;false;18133;92;8;4467;true;false;0;4035926944;
ideal;IteratorHasNext;ForwardQuery: (buildTree $r37.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;18660;445;4;4467;true;false;0;4039648024;
ideal;IteratorHasNext;ForwardQuery: (rename $r6.iterator(),r43 (SSA.rename) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;29130;69;5;4467;true;false;0;4044101560;
ideal;IteratorHasNext;ForwardQuery: (finalizeVisit $r10.iterator(),r37 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r37 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;12729;49;5;4467;true;false;0;4046133336;
ideal;IteratorHasNext;ForwardQuery: (setValueNumbers $r4.iterator(),r35 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r35 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;16391;34;4;4467;true;false;0;4047723976;
ideal;IteratorHasNext;ForwardQuery: (optimizeCFG r1.iterator(),r2 (StackOptimizer.optimizeCFG) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.StackOptimizer;false;false;20083;34;4;4467;true;false;0;4049008736;
ideal;IteratorHasNext;ForwardQuery: (main r123.iterator(),r130 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r130 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;23380;87;5;4467;true;false;0;4053434192;
ideal;IteratorHasNext;ForwardQuery: (search $r11.iterator(),r73 (SSAPRE.search) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r73 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;14087;49;5;4467;true;false;0;4055457320;
ideal;IteratorHasNext;ForwardQuery: (equals r3.iterator(),r28 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r28 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;72422;61;5;4467;true;false;0;4058232984;
ideal;IteratorHasNext;ForwardQuery: (visitTree $r4.iterator(),r2 (DeadCodeElimination$5.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.DeadCodeElimination$5;false;false;30139;47;5;4467;true;false;0;4059004616;
ideal;IteratorHasNext;ForwardQuery: (visitBlock $r14.iterator(),r78 (VerifyCFG.visitBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r78 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;29198;98;4;4467;true;false;0;4063295424;
ideal;IteratorHasNext;ForwardQuery: (iterator $r3.iterator(),r1 (Graph$EdgeSet.iterator) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;true;1845821;5406;70;4467;true;true;0;4300811024;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r5.iterator(),r2 (PrintVisitor.visitFlowGraph) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;51155;57;7;4467;true;false;0;4305000112;
ideal;IteratorHasNext;ForwardQuery: (main r123.iterator(),r133 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r133 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;32081;48;5;4467;true;false;0;4309042080;
ideal;IteratorHasNext;ForwardQuery: (<init> $r24.iterator(),r181 (RegisterAllocator.<init>) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r181 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;40168;85;5;4467;true;false;0;4312676520;
ideal;IteratorHasNext;ForwardQuery: (liveOut $r57.iterator(),r11 (Liveness.liveOut) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r11 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;59468;204;5;4467;true;false;0;4322698336;
ideal;IteratorHasNext;ForwardQuery: (toString $r6.iterator(),r96 (CachingBloatContext.toString) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r96 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;78302;202;5;4467;true;false;0;4327176632;
ideal;IteratorHasNext;ForwardQuery: (release $r15.iterator(),r3 (CachingBloatContext.release) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;21055;80;5;4467;true;false;0;4330020392;
ideal;IteratorHasNext;ForwardQuery: (cleanupOnly r1.iterator(),r2 (DefExpr.cleanupOnly) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()>;EDU.purdue.cs.bloat.tree.DefExpr;false;false;36427;46;5;4467;true;false;0;4333194896;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r25.iterator(),r105 (Liveness.computeIntersections) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r105 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;31683;98;5;4467;true;false;0;4336162888;
ideal;IteratorHasNext;ForwardQuery: (removeUnreachable $r9.iterator(),r1 (Graph.removeUnreachable) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()>;EDU.purdue.cs.bloat.util.Graph;false;false;28248;76;5;4467;true;false;0;4338181208;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r47.iterator(),r175 (FlowGraph.peelLoops) Value: interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;124282;401;4;4467;true;false;0;4362675240;
ideal;IteratorHasNext;ForwardQuery: (rename $r15.iterator(),r32 (SSA.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;35765;121;5;4467;true;false;0;4364984664;
ideal;IteratorHasNext;ForwardQuery: (splitIrreducibleLoops r1.iterator(),r20 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;35656;55;7;4467;true;false;0;4368651568;
ideal;IteratorHasNext;ForwardQuery: (leaves $r4.iterator(),r1 (SSAPRE$Phi.leaves) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;36578;59;5;4467;true;false;0;4371363104;
ideal;IteratorHasNext;ForwardQuery: (insertProtStores $r10.iterator(),r21 (FlowGraph.insertProtStores) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r21 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;31000;51;5;4467;true;false;0;4373402728;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r6.iterator(),r140 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r140 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;71547;413;8;4467;true;false;0;4391992000;
ideal;IteratorHasNext;ForwardQuery: (insertCode $r5.iterator(),r2 (SSA.insertCode) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;34479;22;4;4467;true;false;0;4393342128;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r91.iterator(),r135 (FlowGraph.peelLoops) Value: interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;152519;401;4;4467;true;false;0;4418278888;
ideal;IteratorHasNext;ForwardQuery: (visitPhiStmt $r6.iterator(),r2 (SSAPRE$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.SSAPRE$1;true;false;45608;95;8;4467;true;false;0;4423703904;
ideal;IteratorHasNext;ForwardQuery: (buildCode $r20.iterator(),r218 (CodeArray.buildCode) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r218 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;33833;512;5;4467;true;false;0;4429766432;
ideal;IteratorHasNext;ForwardQuery: (<init> $r3.iterator(),$r4 (SSAPRE$12.<init>) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;97714;364;10;4467;true;true;0;4439850496;
ideal;IteratorHasNext;ForwardQuery: (rename $r12.iterator(),r47 (SSA.rename) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;30624;72;5;4467;true;false;0;4443066568;
ideal;IteratorHasNext;ForwardQuery: (equals r4.iterator(),r26 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;66531;58;5;4467;true;false;0;4448304120;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r8.iterator(),r2 (CodeGenerator$7.visitPhiJoinStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$7;false;false;27731;110;4;4467;true;false;0;4451358176;
ideal;IteratorHasNext;ForwardQuery: (collectVars $r4.iterator(),$r5 (SSA.collectVars) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;18225;50;6;4467;true;false;0;4453148096;
ideal;IteratorHasNext;ForwardQuery: (search $r41.iterator(),r4 (SSA.search) Value: interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;40665;114;7;4467;true;false;0;4457352080;
ideal;IteratorHasNext;ForwardQuery: (printSCCs r4.iterator(),r5 (SSAGraph.printSCCs) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;27979;74;5;4467;true;false;0;4459551840;
ideal;IteratorHasNext;ForwardQuery: (finalizeVisit $r8.iterator(),r34 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;30990;104;4;4467;true;false;0;4462040024;
ideal;IteratorHasNext;ForwardQuery: (search $r61.iterator(),r5 (SSAPRE.search) Value: interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;26703;259;7;4467;true;false;0;4468722648;
ideal;IteratorHasNext;ForwardQuery: (visitBlock $r75.iterator(),r76 (VerifyCFG.visitBlock) Value: interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;62169;126;4;4467;true;false;0;4472109624;
ideal;IteratorHasNext;ForwardQuery: (codeMotion $r12.iterator(),r59 (SSAPRE.codeMotion) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;51314;28;4;4467;true;false;0;4475217392;
ideal;IteratorHasNext;ForwardQuery: (array $r4.iterator(),r27 (CodeArray.array) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;34945;131;5;4467;true;false;0;4477917128;
ideal;IteratorHasNext;ForwardQuery: (removeEmptyBlocks $r62.iterator(),r66 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>());r66 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;40990;206;4;4467;true;false;0;4480338056;
ideal;IteratorHasNext;ForwardQuery: (toString $r16.iterator(),r106 (CachingBloatContext.toString) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r106 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;91601;112;5;4467;true;false;0;4489058344;
ideal;IteratorHasNext;ForwardQuery: (removeEmptyBlocks r68.iterator(),r69 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;18398;209;5;4467;true;false;0;4492195584;
ideal;IteratorHasNext;ForwardQuery: (<init> $r22.iterator(),r179 (RegisterAllocator.<init>) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r179 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;30030;85;5;4467;true;false;0;4495799680;
ideal;IteratorHasNext;ForwardQuery: (print $r11.iterator(),r25 (MethodEditor.print) Value: virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;72576;69;7;4467;true;false;0;4499837472;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes $r27.iterator(),r54 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r54 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;37268;157;5;4467;true;false;0;4505519464;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r33.iterator(),r159 (FlowGraph.peelLoops) Value: interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>());r159 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;79362;378;7;4467;true;false;0;4521108072;
ideal;IteratorHasNext;ForwardQuery: (copyBlock $r10.iterator(),r4 (FlowGraph.copyBlock) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;20229;22;4;4467;true;false;0;4522279360;
ideal;IteratorHasNext;ForwardQuery: (setValueNumbers $r14.iterator(),r31 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;36234;188;7;4467;true;false;0;4527162720;
ideal;IteratorHasNext;ForwardQuery: (splitPhiBlocks $r44.iterator(),r9 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>());r9 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;29776;179;5;4467;true;false;0;4532120264;
ideal;IteratorHasNext;ForwardQuery: (replaceJoinPhis $r4.iterator(),r2 (CodeGenerator.replaceJoinPhis) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;39176;58;7;4467;true;false;0;4535921264;
ideal;IteratorHasNext;ForwardQuery: (removeBlock $r14.iterator(),r30 (FlowGraph.removeBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;27830;85;5;4467;true;false;0;4538566648;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes $r36.iterator(),r42 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;23262;221;4;4467;true;false;0;4542087240;
ideal;IteratorHasNext;ForwardQuery: (splitReducibleLoops $r22.iterator(),r5 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;25984;133;5;4467;true;false;0;4544338512;
ideal;IteratorHasNext;ForwardQuery: (rename r51.iterator(),r58 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r58 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;115432;159;5;4467;true;false;0;4766261344;
ideal;IteratorHasNext;ForwardQuery: (release $r16.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;39317;55;5;4467;true;false;0;4768843704;
ideal;IteratorHasNext;ForwardQuery: (removeUnreachable r1.iterator(),r53 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r53 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;135447;104;9;4467;true;false;0;4780714272;
ideal;IteratorHasNext;ForwardQuery: (splitPhiBlocks $r12.iterator(),r1 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;29298;179;5;4467;true;false;0;4785735568;
ideal;IteratorHasNext;ForwardQuery: (buildCode $r146.iterator(),r223 (CodeArray.buildCode) Value: interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>());r223 = interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;40189;467;5;4467;true;false;0;4794428320;
ideal;IteratorHasNext;ForwardQuery: (placePhiFunctions $r14.iterator(),r30 (SSA.placePhiFunctions) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;34917;66;5;4467;true;false;0;4798519888;
ideal;IteratorHasNext;ForwardQuery: (resetLater $r13.iterator(),r6 (SSAPRE.resetLater) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;45012;93;4;4467;true;false;0;4800919288;
ideal;IteratorHasNext;ForwardQuery: (rename $r15.iterator(),r62 (SSAPRE.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r62 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;13164;30;4;4467;true;false;0;4802499984;
ideal;IteratorHasNext;ForwardQuery: (buildCode r243.iterator(),r244 (CodeArray.buildCode) Value: interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>());r244 = interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;70889;386;5;4467;true;false;0;4815591768;
ideal;IteratorHasNext;ForwardQuery: (visitTree $r3.iterator(),$r4 (ExprPropagation$1.visitTree) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;false;true;7041995;24622;843;4467;true;true;0;5797621984;
ideal;IteratorHasNext;ForwardQuery: (visitPhiCatchStmt $r5.iterator(),r2 (PrintVisitor.visitPhiCatchStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;140449;50;5;4467;true;false;0;5801261768;
ideal;IteratorHasNext;ForwardQuery: (valnum $r27.iterator(),r3 (ValueNumbering.valnum) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)>;EDU.purdue.cs.bloat.trans.ValueNumbering;true;false;90735;81;5;4467;true;false;0;5804750256;
ideal;IteratorHasNext;ForwardQuery: (rename $r25.iterator(),r52 (SSAPRE.rename) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;133533;189;4;4467;true;false;0;5808070432;
ideal;IteratorHasNext;ForwardQuery: (rename $r17.iterator(),r34 (SSA.rename) Value: interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;93277;118;5;4467;true;false;0;5811428944;
ideal;IteratorHasNext;ForwardQuery: (rename $r4.iterator(),r41 (SSA.rename) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r41 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;140485;72;5;4467;true;false;0;5814395136;
ideal;IteratorHasNext;ForwardQuery: (toString $r12.iterator(),r102 (CachingBloatContext.toString) Value: interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>());r102 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;294780;148;5;4467;true;false;0;5821408448;
ideal;IteratorHasNext;ForwardQuery: (addCatchPhiOperands $r8.iterator(),r3 (SSA.addCatchPhiOperands) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;89973;62;5;4467;true;false;0;5823293808;
ideal;IteratorHasNext;ForwardQuery: (placePhis $r22.iterator(),r38 (SSAPRE.placePhis) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;154543;118;8;4467;true;false;0;5829671120;
ideal;IteratorHasNext;ForwardQuery: (search $r9.iterator(),r70 (SSAPRE.search) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r70 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;99997;97;4;4467;true;false;0;5832097472;
ideal;IteratorHasNext;ForwardQuery: (search $r6.iterator(),r13 (PersistentCheckElimination.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r13 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])>;EDU.purdue.cs.bloat.trans.PersistentCheckElimination;true;false;57157;55;5;4467;true;false;0;5834168224;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r37.iterator(),r164 (FlowGraph.peelLoops) Value: interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>());r164 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;131512;376;6;4467;true;false;0;5840211968;
ideal;IteratorHasNext;ForwardQuery: (computeIntersections $r50.iterator(),r95 (Liveness.computeIntersections) Value: interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;true;false;43139;192;5;4467;true;false;0;5843128672;
ideal;IteratorHasNext;ForwardQuery: (visitPhiStmt $r6.iterator(),r3 (ExprPropagation$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;true;false;155002;119;8;4467;true;false;0;5849721504;
ideal;IteratorHasNext;ForwardQuery: (rename r51.iterator(),r55 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;755790;12631;766;4467;true;true;0;6386466000;
ideal;IteratorHasNext;ForwardQuery: (computeLater $r11.iterator(),r2 (SSAPRE.computeLater) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;43315;95;4;4467;true;false;0;6388865232;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r10.iterator(),r2 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;68117;89;4;4467;true;false;0;6392257296;
ideal;IteratorHasNext;ForwardQuery: (placePhiFunctions $r8.iterator(),r28 (SSA.placePhiFunctions) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;29749;69;5;4467;true;false;0;6394198552;
ideal;IteratorHasNext;ForwardQuery: (calcFrontier $r16.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;50999;147;4;4467;true;false;0;6396908872;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r56.iterator(),r168 (FlowGraph.peelLoops) Value: interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>());r168 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;41359;374;5;4467;true;false;0;6400477776;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r115.iterator(),r126 (FlowGraph.peelLoops) Value: interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>());r126 = interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;225720;464;4;4467;true;false;0;6410484320;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r26 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;102967;48;5;4467;true;false;0;6416850384;
ideal;IteratorHasNext;ForwardQuery: (buildLoopTree $r9.iterator(),r36 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r36 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;62031;66;4;4467;true;false;0;6418968760;
ideal;IteratorHasNext;ForwardQuery: (isMu $r9.iterator(),r3 (InductionVarAnalyzer.isMu) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;65703;102;3;4467;true;false;0;6421289896;
ideal;IteratorHasNext;ForwardQuery: (get_local $r4.iterator(),r1 (InductionVarAnalyzer.get_local) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;58718;51;5;4467;true;false;0;6423861632;
ideal;IteratorHasNext;ForwardQuery: (toString $r24.iterator(),r1 (SSAPRE$Phi.toString) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;72735;151;4;4467;true;false;0;6427910872;
ideal;IteratorHasNext;ForwardQuery: (get_swizzler $r4.iterator(),r1 (InductionVarAnalyzer.get_swizzler) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;56483;55;5;4467;true;false;0;6430261000;
ideal;IteratorHasNext;ForwardQuery: (computeCanBeAvail $r12.iterator(),r5 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;43078;96;4;4467;true;false;0;6432659568;
ideal;IteratorHasNext;ForwardQuery: (phiRelatedFind r1.iterator(),r2 (SSAPRE.phiRelatedFind) Value: virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>());r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;45843;47;5;4467;true;false;0;6435852536;
ideal;IteratorHasNext;ForwardQuery: (initLocals r1.iterator(),r3 (Tree.initLocals) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)>;EDU.purdue.cs.bloat.tree.Tree;false;false;41265;51;5;4467;true;false;0;6438493952;
ideal;IteratorHasNext;ForwardQuery: (buildPhiOperand $r6.iterator(),r4 (SSAPRE.buildPhiOperand) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;675491;9420;748;4467;true;true;0;6806536536;
ideal;IteratorHasNext;ForwardQuery: (buildTree r68.iterator(),r69 (DominatorTree.buildTree) Value: interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;41338;279;4;4467;true;false;0;6809928112;
ideal;IteratorHasNext;ForwardQuery: (<init> $r6.iterator(),$r7 (SSAPRE$12.<init>) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;114652;342;10;4467;true;true;0;6821269080;
ideal;IteratorHasNext;ForwardQuery: (transform $r6.iterator(),r2 (CompactArrayInitializer.transform) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)>;EDU.purdue.cs.bloat.trans.CompactArrayInitializer;false;false;54062;330;7;4467;true;false;0;6828101976;
ideal;IteratorHasNext;ForwardQuery: (main $r7.iterator(),r135 (Main.main) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;true;false;30546;53;5;4467;true;false;0;6830160424;
ideal;IteratorHasNext;ForwardQuery: (resetCanBeAvail $r13.iterator(),r6 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;39749;97;4;4467;true;false;0;6832602008;
ideal;IteratorHasNext;ForwardQuery: (visitTree $r4.iterator(),r2 (CodeGenerator$4.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$4;false;false;42187;32;5;4467;true;false;0;6834305760;
ideal;IteratorHasNext;ForwardQuery: (splitReducibleLoops $r40.iterator(),r47 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;39811;185;4;4467;true;false;0;6837175696;
ideal;IteratorHasNext;ForwardQuery: (liveOut $r31.iterator(),r93 (Liveness.liveOut) Value: interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>());r93 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;100688;204;5;4467;true;false;0;6847773096;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes $r11.iterator(),r63 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r63 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;99624;51;5;4467;true;false;0;6855584216;
ideal;IteratorHasNext;ForwardQuery: (liveOut r4.iterator(),r7 (Liveness.liveOut) Value: interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>());r7 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;102001;204;5;4467;true;false;0;6865785472;
ideal;IteratorHasNext;ForwardQuery: (toString $r4.iterator(),r1 (Graph.toString) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()>;EDU.purdue.cs.bloat.util.Graph;false;false;41217;41;4;4467;true;false;0;6867870968;
ideal;IteratorHasNext;ForwardQuery: (buildTreeForBlock $r72.iterator(),r91 (FlowGraph.buildTreeForBlock) Value: interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>());r91 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;45155;48;5;4467;true;false;0;6870487544;
ideal;IteratorHasNext;ForwardQuery: (<init> $r8.iterator(),r3 (PhiJoinStmt.<init>) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;false;false;40687;81;4;4467;true;false;0;6872811008;
ideal;IteratorHasNext;ForwardQuery: (visitInitStmt $r11.iterator(),r5 (TypeInference$1.visitInitStmt) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInference$1;true;false;32359;68;5;4467;true;false;0;6875510368;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r6.iterator(),r133 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r133 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;78843;413;8;4467;true;false;0;6893473544;
ideal;IteratorHasNext;ForwardQuery: (removeCriticalEdges r1.iterator(),r26 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;52124;70;7;4467;true;false;0;6897438008;
ideal;IteratorHasNext;ForwardQuery: (visitTree $r4.iterator(),r2 (SSA$1.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.ssa.SSA$1;false;false;31656;34;5;4467;true;false;0;6899148016;
ideal;IteratorHasNext;ForwardQuery: (visitRetStmt $r5.iterator(),r2 (ReplaceTarget.visitRetStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.ReplaceTarget;false;false;51133;82;5;4467;true;false;0;6902603104;
ideal;IteratorHasNext;ForwardQuery: (codeMotion $r10.iterator(),r52 (SSAPRE.codeMotion) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;50522;126;4;4467;true;false;0;6905359928;
ideal;IteratorHasNext;ForwardQuery: (visitForceChildren $r4.iterator(),r2 (PhiJoinStmt.visitForceChildren) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;true;false;52123;92;8;4467;true;false;0;6910530480;
ideal;IteratorHasNext;ForwardQuery: (buildTree $r6.iterator(),r74 (DominatorTree.buildTree) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60828;133;4;4467;true;false;0;6913305920;
ideal;IteratorHasNext;ForwardQuery: (calcFrontier $r4.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;30218;109;5;4467;true;false;0;6915740784;
ideal;IteratorHasNext;ForwardQuery: (<init> $r6.iterator(),r154 (RegisterAllocator.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r154 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;41159;385;4;4467;true;false;0;6918949992;
ideal;IteratorHasNext;ForwardQuery: (placePhiFunctions $r6.iterator(),r3 (SSA.placePhiFunctions) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;64699;102;7;4467;true;false;0;6923057664;
ideal;IteratorHasNext;ForwardQuery: (removeBlock $r16.iterator(),r32 (FlowGraph.removeBlock) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;62725;75;5;4467;true;false;0;6926280320;
ideal;IteratorHasNext;ForwardQuery: (calcFrontier $r5.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;45602;146;4;4467;true;false;0;6928981936;
ideal;IteratorHasNext;ForwardQuery: (visitPhiJoinStmt $r4.iterator(),r2 (ValueFolder.visitPhiJoinStmt) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.trans.ValueFolder;true;false;51249;132;8;4467;true;false;0;6934540144;
ideal;IteratorHasNext;ForwardQuery: (buildTrees $r62.iterator(),r15 (FlowGraph.buildTrees) Value: interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;42703;105;4;4467;true;false;0;6936537528;
ideal;IteratorHasNext;ForwardQuery: (toString $r14.iterator(),r104 (CachingBloatContext.toString) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r104 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;112750;130;5;4467;true;false;0;6944390912;
ideal;IteratorHasNext;ForwardQuery: (visitNode $r13.iterator(),r50 (SSAGraph$5.visitNode) Value: interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>());r50 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;67215;139;5;4467;true;false;0;6947660576;
ideal;IteratorHasNext;ForwardQuery: (buildCode $r202.iterator(),r208 (CodeArray.buildCode) Value: interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>());r208 = interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;170737;603;7;4467;true;false;0;6961757584;
ideal;IteratorHasNext;ForwardQuery: (rename $r29.iterator(),r40 (SSA.rename) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r40 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;61999;121;5;4467;true;false;0;6964343432;
ideal;IteratorHasNext;ForwardQuery: (insertProtectedRegionStores $r9.iterator(),r2 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;57843;68;5;4467;true;false;0;6967111704;
ideal;IteratorHasNext;ForwardQuery: (enqueueParents $r10.iterator(),r3 (SSAPRE.enqueueParents) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;49562;39;4;4467;true;false;0;6968778304;
ideal;IteratorHasNext;ForwardQuery: (peelLoops $r85.iterator(),r148 (FlowGraph.peelLoops) Value: interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>());r148 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;209419;401;4;4467;true;false;0;6994605896;
ideal;IteratorHasNext;ForwardQuery: (superclass r3.iterator(),r4 (ClassHierarchy.superclass) Value: interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;60987;76;4;4467;true;false;0;6997029848;
ideal;IteratorHasNext;ForwardQuery: (firstBlock $r4.iterator(),r1 (MethodEditor.firstBlock) Value: virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;85687;57;7;4467;true;false;0;7000846312;
ideal;IteratorHasNext;ForwardQuery: (peelLoops r162.iterator(),r177 (FlowGraph.peelLoops) Value: interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>());r177 = interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;154765;378;7;4467;true;false;0;7016006368;
ideal;IteratorHasNext;ForwardQuery: (start $r39.iterator(),r40 (TypeInferenceVisitor.start) Value: interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;66609;54;5;4467;true;false;0;7018644664;
ideal;IteratorHasNext;ForwardQuery: (addHandlerEdges $r14.iterator(),r24 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;54058;118;4;4467;true;false;0;7021183712;
ideal;IteratorHasNext;ForwardQuery: (validate $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;34815;213;5;4467;true;false;0;7023544048;
ideal;IteratorHasNext;ForwardQuery: (<init> $r11.iterator(),r3 (ClassHierarchy.<init>) Value: virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;42362;46;5;4467;true;false;0;7026153168;
ideal;IteratorHasNext;ForwardQuery: (buildLoopTree $r14.iterator(),r42 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;79945;87;4;4467;true;false;0;7030223320;
ideal;IteratorHasNext;ForwardQuery: (computeWeight $r9.iterator(),r1 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;53187;98;5;4467;true;false;0;7033537872;
ideal;IteratorHasNext;ForwardQuery: (addClasses r1.iterator(),r2 (PersistentBloatContext.addClasses) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)>;EDU.purdue.cs.bloat.context.PersistentBloatContext;false;false;50616;47;5;4467;true;false;0;7036146696;
ideal;IteratorHasNext;ForwardQuery: (iterator r0.iterator(),r1 (Graph$NodeList.iterator) Value: specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$NodeList;true;false;329381;762;24;4467;true;true;0;7067329664;
ideal;IteratorHasNext;ForwardQuery: (splitReducibleLoops $r8.iterator(),r3 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;66983;126;4;4467;true;false;0;7069460024;
ideal;IteratorHasNext;ForwardQuery: (placePhis $r18.iterator(),r33 (SSAPRE.placePhis) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r33 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;87437;62;4;4467;true;false;0;7072304824;
ideal;IteratorHasNext;ForwardQuery: (removeEmptyBlocks $r5.iterator(),r64 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r64 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;54896;206;4;4467;true;false;0;7074864496;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r13.iterator(),r2 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;162543;129;7;4467;true;false;0;7081376960;
ideal;IteratorHasNext;ForwardQuery: (search $r6.iterator(),r50 (SSA.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r50 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;27902;49;5;4467;true;false;0;7083419736;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r2 (TypeInference$2.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.tbaa.TypeInference$2;false;false;55218;54;5;4467;true;false;0;7086638000;
ideal;IteratorHasNext;ForwardQuery: (removeCriticalEdges $r19.iterator(),r24 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;40046;129;4;4467;true;false;0;7089227000;
ideal;IteratorHasNext;ForwardQuery: (placePhiFunctions $r10.iterator(),r31 (SSA.placePhiFunctions) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;29609;51;5;4467;true;false;0;7091271696;
ideal;IteratorHasNext;ForwardQuery: (visitPhiStmt $r12.iterator(),r4 (RegisterAllocator$1.visitPhiStmt) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$1;true;false;58481;108;8;4467;true;false;0;7096644584;
ideal;IteratorHasNext;ForwardQuery: (commit $r12.iterator(),r130 (MethodEditor.commit) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r130 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;185033;327;7;4467;true;false;0;7106045104;
ideal;IteratorHasNext;ForwardQuery: (toString $r10.iterator(),r100 (CachingBloatContext.toString) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());r100 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;80170;166;5;4467;true;false;0;7112331960;
ideal;IteratorHasNext;ForwardQuery: (number $r7.iterator(),r3 (Graph.number) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)>;EDU.purdue.cs.bloat.util.Graph;false;false;47501;83;4;4467;true;false;0;7115101768;
ideal;IteratorHasNext;ForwardQuery: (downSafety $r8.iterator(),r2 (SSAPRE.downSafety) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;26437;30;4;4467;true;false;0;7116692568;
ideal;IteratorHasNext;ForwardQuery: (insertEdgesToSinkDFS $r6.iterator(),r5 (DominatorTree.insertEdgesToSinkDFS) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;29319;120;4;4467;true;false;0;7119297928;
ideal;IteratorHasNext;ForwardQuery: (codeMotion $r29.iterator(),r55 (SSAPRE.codeMotion) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r55 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;29913;185;4;4467;true;false;0;7122334656;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r2 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;73423;88;5;4467;true;false;0;7126006000;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r6.iterator(),r2 (VerifyCFG.visitFlowGraph) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;34218;69;5;4467;true;false;0;7128732512;
ideal;IteratorHasNext;ForwardQuery: (resetCanBeAvail $r10.iterator(),r3 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;34459;38;4;4467;true;false;0;7130400424;
ideal;IteratorHasNext;ForwardQuery: (splitPhiBlocks $r69.iterator(),r74 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;42290;176;5;4467;true;false;0;7135916832;
ideal;IteratorHasNext;ForwardQuery: (search $r5.iterator(),r43 (SSA.search) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;29046;101;4;4467;true;false;0;7138392536;
ideal;IteratorHasNext;ForwardQuery: (propExpr $r5.iterator(),r34 (ExprPropagation.propExpr) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;53588;56;5;4467;true;false;0;7141279552;
ideal;IteratorHasNext;ForwardQuery: (<init> $r11.iterator(),r169 (RegisterAllocator.<init>) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r169 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;48287;194;4;4467;true;false;0;7144664560;
ideal;IteratorHasNext;ForwardQuery: (verifyTargets r2.iterator(),r3 (VerifyCFG.verifyTargets) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;36889;70;5;4467;true;false;0;7147426904;
ideal;IteratorHasNext;ForwardQuery: (computeWeight $r12.iterator(),r3 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;30464;98;5;4467;true;false;0;7150707608;
ideal;IteratorHasNext;ForwardQuery: (splitPhiBlocks $r15.iterator(),r4 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;37508;179;5;4467;true;false;0;7155837440;
ideal;IteratorHasNext;ForwardQuery: (commit $r158.iterator(),r159 (MethodEditor.commit) Value: virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>());r159 = virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;200468;82;7;4467;true;false;0;7175134608;
ideal;IteratorHasNext;ForwardQuery: (computeWeight $r23.iterator(),r6 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;false;false;50681;125;4;4467;true;false;0;7177691632;
ideal;IteratorHasNext;ForwardQuery: (placePhis $r11.iterator(),r30 (SSAPRE.placePhis) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;55799;85;4;4467;true;false;0;7179702776;
ideal;IteratorHasNext;ForwardQuery: (equals r3.iterator(),r24 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;110776;71;5;4467;true;false;0;7183988200;
ideal;IteratorHasNext;ForwardQuery: (<init> $r2.iterator(),$r3 (ImmutableIterator.<init>) Value: virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>());$r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)>;EDU.purdue.cs.bloat.util.ImmutableIterator;true;false;456084;1888;12;4467;true;true;0;7221255632;
ideal;IteratorHasNext;ForwardQuery: (addHandlerEdges $r11.iterator(),r6 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;38650;91;5;4467;true;false;0;7223334088;
ideal;IteratorHasNext;ForwardQuery: (toString $r20.iterator(),r110 (CachingBloatContext.toString) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r110 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;86567;76;5;4467;true;false;0;7234543416;
ideal;IteratorHasNext;ForwardQuery: (setBlockTypes $r10.iterator(),r57 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r57 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;38719;86;5;4467;true;false;0;7237117120;
ideal;IteratorHasNext;ForwardQuery: (buildLists $r7.iterator(),r17 (Graph.buildLists) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;50656;33;4;4467;true;false;0;7239124632;
ideal;IteratorHasNext;ForwardQuery: (beginTry $r16.iterator(),r6 (SSAPRE.beginTry) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;34505;77;5;4467;true;false;0;7242151768;
ideal;IteratorHasNext;ForwardQuery: (cleanup $r3.iterator(),r1 (ValueFolder.cleanup) Value: virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()>;EDU.purdue.cs.bloat.trans.ValueFolder;false;false;35165;46;5;4467;true;false;0;7244776144;
ideal;IteratorHasNext;ForwardQuery: (visitComponent r1.iterator(),r2 (InductionVarAnalyzer$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1;false;false;43712;63;5;4467;true;false;0;7248097992;
ideal;IteratorHasNext;ForwardQuery: (visitFlowGraph $r20.iterator(),r6 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;78209;83;7;4467;true;false;0;7255032536;
