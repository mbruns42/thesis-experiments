Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath;MaxMemory
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.trans.ValueFolder;true;false;60649;316;60223;426;7;4467;r0[target, dimensions, array, object, parent];2013653696;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.tbaa.TypeInference$2;false;false;60545;59;60027;518;4;4467;r0[target, dimensions, array, object, parent];348877888;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;117;67;20;97;4;4467;r0[target, dimensions, array, object, parent];294878328;
ideal-ap;IteratorHasNext;r22 @ r22 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r22 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;30417;291;30319;98;4;4467;r0[target, dimensions, array, object, parent];330466272;
ideal-ap;IteratorHasNext;r139 @ r139 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();r139 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;90594;267;90368;226;6;4467;r0[target, dimensions, array, object, parent];548568424;
ideal-ap;IteratorHasNext;r26 @ r26 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();r26 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;109;63;22;87;6;4467;r0[target, dimensions, array, object, parent];296966256;
ideal-ap;IteratorHasNext;r159 @ r159 = virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>();r159 = virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;90446;88;90357;89;6;4467;r0[target, dimensions, array, object, parent];553266968;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2833;165;2833;0;4;4467;r0[target, dimensions, array, object, parent];381208416;
ideal-ap;IteratorHasNext;r168 @ r168 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();r168 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;31524;8227;30764;760;4;4467;r0[target, dimensions, array, object, parent];399262536;
ideal-ap;IteratorHasNext;r25 @ r25 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();r25 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;30516;204;30425;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1428887040;
ideal-ap;IteratorHasNext;r69 @ r69 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();r69 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;30246;431;30124;122;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1447305664;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;true;2927;67;2927;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];368931760;
ideal-ap;IteratorHasNext;r164 @ r164 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();r164 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;39074;6972;39074;0;5;4467;r0[params, array, array, expr, size, array, expr, value, map];1680279112;
ideal-ap;IteratorHasNext;r26 @ r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;92274;76;92185;89;6;4467;r0[params, array, array, expr, size, array, expr, value, map];2399751480;
ideal-ap;IteratorHasNext;r32 @ r32 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r32 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;30144;67;30057;87;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1284040816;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2298;89;2298;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];349449952;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;60299;122;60209;90;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1985071744;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2717;117;2717;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];345748112;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;60675;56;60585;90;4;4467;r0[params, array, array, expr, size, array, expr, value, map];2072352736;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();r5 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1382;265;1382;0;6;4467;r0[params, array, array, expr, size, array, expr, value, map];265946392;
ideal-ap;IteratorHasNext;r26 @ r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;60613;52;60084;529;4;4467;r0[params, array, array, expr, size, array, expr, value, map];318929504;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;60422;64;60261;161;4;4467;r0[params, array, array, expr, size, array, expr, value, map];2362637112;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();r1 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;90464;154;90369;95;3;4467;r0[params, array, array, expr, size, array, expr, value, map];2943620256;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;90519;105;90392;127;4;4467;r0[params, array, array, expr, size, array, expr, value, map];880443752;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1244;663;1244;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];349213264;
ideal-ap;IteratorHasNext;r40 @ r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;30114;73;30023;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];749681832;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;90414;92;90325;89;3;4467;r0[params, array, array, expr, size, array, expr, value, map];2183510832;
ideal-ap;IteratorHasNext;r32 @ r32 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();r32 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;3663;372;3663;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];346875608;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2854;181;2854;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];346415056;
ideal-ap;IteratorHasNext;r55 @ r55 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();r55 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;142968;2256536;142968;0;785;4467;r0[params, array, array, expr, size, array, expr, value, map];3242574416;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.StackOptimizer;false;true;2284;37;2284;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];345814088;
ideal-ap;IteratorHasNext;r25 @ r25 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r25 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;60743;76;60652;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];317931224;
ideal-ap;IteratorHasNext;r88 @ r88 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();r88 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;true;4520;225;4520;0;6;4467;r0[params, array, array, expr, size, array, expr, value, map];346070648;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3655;1164;3655;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];346846352;
ideal-ap;IteratorHasNext;r38 @ r38 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();r38 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2309;113;2309;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];292029408;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;60928;63;60025;903;4;4467;r0[params, array, array, expr, size, array, expr, value, map];318082992;
ideal-ap;IteratorHasNext;$r58 @ $r58 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();$r58 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60450;449;60344;106;3;4467;r0[params, array, array, expr, size, array, expr, value, map];320401704;
ideal-ap;IteratorHasNext;r28 @ r28 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();r28 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;61154;1696;61042;112;7;4467;r0[params, array, array, expr, size, array, expr, value, map];2937392656;
ideal-ap;IteratorHasNext;r40 @ r40 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();r40 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;30228;63;30141;87;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1324916960;
ideal-ap;IteratorHasNext;r36 @ r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;30603;123;30513;90;4;4467;r0[params, array, array, expr, size, array, expr, value, map];558342256;
ideal-ap;IteratorHasNext;r34 @ r34 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();r34 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2719;357;2719;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];355794344;
ideal-ap;IteratorHasNext;$r4 @ $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;false;false;122;400;26;96;7;4467;r0[params, array, array, expr, size, array, expr, value, map];272608392;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph$6;false;false;60638;95;60544;94;3;4467;r0[params, array, array, expr, size, array, expr, value, map];643346016;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();r1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$1;false;false;91132;2769;90377;755;61;4467;r0[params, array, array, expr, size, array, expr, value, map];349955072;
ideal-ap;IteratorHasNext;r151 @ r151 = interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>();r151 = interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;31140;8161;30433;707;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1562118832;
ideal-ap;IteratorHasNext;r47 @ r47 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r47 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;30323;187;30027;296;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1156369088;
ideal-ap;IteratorHasNext;r32 @ r32 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();r32 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;110;162;19;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];262261376;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;30371;188;30281;90;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1452952424;
ideal-ap;IteratorHasNext;r35 @ r35 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r35 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2074;37;2074;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];313341800;
ideal-ap;IteratorHasNext;r30 @ r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;110;227;19;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];262127952;
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();$r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)>;EDU.purdue.cs.bloat.codegen.Liveness$1;false;true;1075;468;1075;0;6;4467;r0[params, array, array, expr, size, array, expr, value, map];264651032;
ideal-ap;IteratorHasNext;r54 @ r54 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();r54 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;31202;976;31103;99;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1528985080;
ideal-ap;IteratorHasNext;r108 @ r108 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();r108 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;115;192;20;95;4;4467;r0[params, array, array, expr, size, array, expr, value, map];266003456;
ideal-ap;IteratorHasNext;r1 @ r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()>;EDU.purdue.cs.bloat.trans.ValueFolder;false;false;60523;50;60429;94;4;4467;r0[params, array, array, expr, size, array, expr, value, map];333010432;
ideal-ap;IteratorHasNext;r20 @ r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;91016;61;90925;91;6;4467;r0[params, array, array, expr, size, array, expr, value, map];3142506616;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1533;191;1533;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];278880400;
ideal-ap;IteratorHasNext;r25 @ r25 = virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>();r25 = virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;90521;120;90301;220;6;4467;r0[params, array, array, expr, size, array, expr, value, map];3165929344;
ideal-ap;IteratorHasNext;r145 @ r145 = interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>();r145 = interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;31275;8895;30375;900;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1364890680;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)>;EDU.purdue.cs.bloat.tree.Tree;false;true;3490;55;3490;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];362691944;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1708;118;1708;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];329981064;
ideal-ap;IteratorHasNext;r47 @ r47 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();r47 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1314;189;1314;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];362920728;
ideal-ap;IteratorHasNext;r244 @ r244 = interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>();r244 = interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;32948;8598;30639;2309;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1542716480;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$4;false;false;61302;36;61212;90;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1774473664;
ideal-ap;IteratorHasNext;r55 @ r55 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();r55 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2054;189;2054;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];313807272;
ideal-ap;IteratorHasNext;r143 @ r143 = virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>();r143 = virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;60584;247;60492;92;5;4467;r0[params, array, array, expr, size, array, expr, value, map];315047048;
ideal-ap;IteratorHasNext;r100 @ r100 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();r100 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60175;348;60083;92;3;4467;r0[params, array, array, expr, size, array, expr, value, map];333603608;
ideal-ap;IteratorHasNext;r34 @ r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60595;107;60505;90;3;4467;r0[params, array, array, expr, size, array, expr, value, map];311685448;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;109;103;18;91;2;4467;r0[params, array, array, expr, size, array, expr, value, map];262351200;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;60157;78;60027;130;3;4467;r0[params, array, array, expr, size, array, expr, value, map];747570848;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1795;40;1795;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];313366704;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2323;101;2323;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];313527640;
ideal-ap;IteratorHasNext;r86 @ r86 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r86 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;true;2988;202;2988;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];338357872;
ideal-ap;IteratorHasNext;r172 @ r172 = virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>();r172 = virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;60276;181;60179;97;4;4467;r0[params, array, array, expr, size, array, expr, value, map];320438576;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;60454;25;60367;87;3;4467;r0[params, array, array, expr, size, array, expr, value, map];2313506656;
ideal-ap;IteratorHasNext;r33 @ r33 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();r33 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1320;65;1320;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];266262360;
ideal-ap;IteratorHasNext;r55 @ r55 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();r55 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;60204;128;60109;95;4;4467;r0[params, array, array, expr, size, array, expr, value, map];581943992;
ideal-ap;IteratorHasNext;r166 @ r166 = virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>();r166 = virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;true;1754;398;1754;0;5;4467;r0[params, array, array, expr, size, array, expr, value, map];264295592;
ideal-ap;IteratorHasNext;r35 @ r35 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();r35 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1468;96;1468;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];266036136;
ideal-ap;IteratorHasNext;r210 @ r210 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();r210 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;151719;596;151594;125;6;4467;r0[params, array, array, expr, size, array, expr, value, map];594732112;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r1 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3650;323;3650;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];346185968;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;false;true;1183;84;1183;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];346458176;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$1;true;false;61033;149;60941;92;7;4467;r0[params, array, array, expr, size, array, expr, value, map];1804711040;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInference$1;true;false;30140;144;30045;95;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1077709824;
ideal-ap;IteratorHasNext;r14 @ r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;false;false;60325;53;60032;293;4;4467;r0[params, array, array, expr, size, array, expr, value, map];322652296;
ideal-ap;IteratorHasNext;r208 @ r208 = interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>();r208 = interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;90507;609;90406;101;6;4467;r0[params, array, array, expr, size, array, expr, value, map];581587640;
ideal-ap;IteratorHasNext;r15 @ r15 = interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>();r15 = interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2157;109;2157;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];342248568;
ideal-ap;IteratorHasNext;$r3 @ $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();$r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)>;EDU.purdue.cs.bloat.util.ImmutableIterator;false;true;603904;12886;603904;0;10;4467;r0[params, array, array, expr, size, array, expr, value, map];706223168;
ideal-ap;IteratorHasNext;r105 @ r105 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();r105 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60510;103;60419;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];2400690944;
ideal-ap;IteratorHasNext;r57 @ r57 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();r57 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1871;160;1871;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];266243176;
ideal-ap;IteratorHasNext;r58 @ r58 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();r58 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60396;231;60304;92;4;4467;r0[params, array, array, expr, size, array, expr, value, map];318092560;
ideal-ap;IteratorHasNext;r156 @ r156 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();r156 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2332;405;2332;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];347206248;
ideal-ap;IteratorHasNext;$r4 @ $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;false;true;187814;3439800;187814;0;827;4467;r0[params, array, array, expr, size, array, expr, value, map];4807683160;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;30110;115;30021;89;4;4467;r0[params, array, array, expr, size, array, expr, value, map];294674488;
ideal-ap;IteratorHasNext;r42 @ r42 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r42 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1664;100;1664;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];290378368;
ideal-ap;IteratorHasNext;r73 @ r73 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r73 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;30514;63;30393;121;4;4467;r0[params, array, array, expr, size, array, expr, value, map];290815704;
ideal-ap;IteratorHasNext;r93 @ r93 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();r93 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60735;209;60611;124;4;4467;r0[params, array, array, expr, size, array, expr, value, map];333270688;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;90366;63;90276;90;6;4467;r0[params, array, array, expr, size, array, expr, value, map];283757072;
ideal-ap;IteratorHasNext;r40 @ r40 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r40 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;115;191;24;91;6;4467;r0[params, array, array, expr, size, array, expr, value, map];264057848;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;141;410;46;95;4;4467;r0[params, array, array, expr, size, array, expr, value, map];267510232;
ideal-ap;IteratorHasNext;r37 @ r37 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r37 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;30246;63;30158;88;4;4467;r0[params, array, array, expr, size, array, expr, value, map];292973840;
ideal-ap;IteratorHasNext;r25 @ r25 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();r25 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;112;75;19;93;6;4467;r0[params, array, array, expr, size, array, expr, value, map];262406104;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;true;false;61286;127;61194;92;7;4467;r0[params, array, array, expr, size, array, expr, value, map];1590992624;
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();$r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;106;64;18;88;4;4467;r0[params, array, array, expr, size, array, expr, value, map];262218560;
ideal-ap;IteratorHasNext;r30 @ r30 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r30 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;30131;100;30040;91;4;4467;r0[params, array, array, expr, size, array, expr, value, map];1087749792;
ideal-ap;IteratorHasNext;r175 @ r175 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();r175 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3624;405;3624;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];347489440;
ideal-ap;IteratorHasNext;r74 @ r74 = interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>();r74 = interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3845;308;3845;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];346666136;
ideal-ap;IteratorHasNext;r98 @ r98 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();r98 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;119;467;22;97;4;4467;r0[params, array, array, expr, size, array, expr, value, map];263396712;
ideal-ap;IteratorHasNext;r31 @ r31 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r31 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;91415;195;91323;92;6;4467;r0[params, array, array, expr, size, array, expr, value, map];3657055992;
ideal-ap;IteratorHasNext;r154 @ r154 = virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>();r154 = virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;90575;109;90485;90;6;4467;r0[params, array, array, expr, size, array, expr, value, map];522467016;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2322;73;2322;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];341528600;
ideal-ap;IteratorHasNext;r53 @ r53 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r53 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;113;112;23;90;8;4467;r0[params, array, array, expr, size, array, expr, value, map];267650120;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3112;72;3112;0;4;4467;r0[params, array, array, expr, size, array, expr, value, map];349782256;
ideal-ap;IteratorHasNext;r52 @ r52 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();r52 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1375;193;1375;0;3;4467;r0[params, array, array, expr, size, array, expr, value, map];269966608;
ideal-ap;IteratorHasNext;$r58 @ $r58 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();$r58 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60427;449;60330;97;3;4467;r0[params, array, array, expr, size, array, expr, value, map];323681360;
ideal-ap;IteratorHasNext;r1 @ r1 = specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();r1 = specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$NodeList;false;false;121006;812;120501;505;22;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1974882424;
ideal-ap;IteratorHasNext;r126 @ r126 = interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>();r126 = interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;90355;467;90025;330;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];3353660632;
ideal-ap;IteratorHasNext;r72 @ r72 = interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>();r72 = interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;true;false;30180;2325;30054;126;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];296064568;
ideal-ap;IteratorHasNext;r7 @ r7 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();r7 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60328;209;60237;91;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];368112448;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3054;129;3054;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];337828656;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60526;123;60231;295;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];318447656;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;60193;80;60103;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];283130312;
ideal-ap;IteratorHasNext;r31 @ r31 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r31 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2532;87;2532;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];338793072;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();r4 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;30574;76;30094;480;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];720485888;
ideal-ap;IteratorHasNext;r133 @ r133 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();r133 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;62504;11267;61780;724;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2584911656;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2527;109;2527;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];313588456;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;30116;105;30025;91;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1598950400;
ideal-ap;IteratorHasNext;r28 @ r28 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r28 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2493;123;2493;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];346863416;
ideal-ap;IteratorHasNext;r231 @ r231 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();r231 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;90374;407;90073;301;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];570206656;
ideal-ap;IteratorHasNext;r9 @ r9 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();r9 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2466;1271;2466;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];346764272;
ideal-ap;IteratorHasNext;r179 @ r179 = interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>();r179 = interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;90355;385;90059;296;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];3935651992;
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();$r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;false;false;116;374;24;92;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];278115056;
ideal-ap;IteratorHasNext;r110 @ r110 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();r110 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;110;137;20;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];277593880;
ideal-ap;IteratorHasNext;r59 @ r59 = virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>();r59 = virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;60368;78;60279;89;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];337205784;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)>;EDU.purdue.cs.bloat.trans.CompactArrayInitializer;false;false;113;336;22;91;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];278514376;
ideal-ap;IteratorHasNext;r52 @ r52 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r52 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;926;129;926;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];328529128;
ideal-ap;IteratorHasNext;r94 @ r94 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();r94 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;90498;254;90404;94;8;4467;r0[table, array, next, after, before, prev, right, parent, left, value];455348160;
ideal-ap;IteratorHasNext;r40 @ r40 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();r40 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;30127;737;30032;95;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1399593856;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;91250;148;91159;91;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];3316590824;
ideal-ap;IteratorHasNext;r34 @ r34 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();r34 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;108;32;18;90;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];262351512;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;108;75;18;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];262321944;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;90645;54;90554;91;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2189372848;
ideal-ap;IteratorHasNext;r181 @ r181 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();r181 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;30436;248;30317;119;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];457494632;
ideal-ap;IteratorHasNext;r130 @ r130 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();r130 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;60130;91;60034;96;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];335090416;
ideal-ap;IteratorHasNext;r40 @ r40 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();r40 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1711;47;1711;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];296507984;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;92564;120;92472;92;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];4009852088;
ideal-ap;IteratorHasNext;r15 @ r15 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();r15 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;60344;105;60258;86;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];315488616;
ideal-ap;IteratorHasNext;r24 @ r24 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();r24 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2502;133;2502;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];360737056;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1137;78;1137;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];278765176;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;true;2498;64;2498;0;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];362355320;
ideal-ap;IteratorHasNext;r61 @ r61 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();r61 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60125;62;60033;92;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];338217328;
ideal-ap;IteratorHasNext;r53 @ r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;30250;443;30156;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];586263528;
ideal-ap;IteratorHasNext;r140 @ r140 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();r140 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;60764;8936;60420;344;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2874350400;
ideal-ap;IteratorHasNext;r19 @ r19 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();r19 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30127;299;30038;89;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2090614256;
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();$r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$3: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$3;false;true;109622;3441524;109622;0;827;4467;r0[table, array, next, after, before, prev, right, parent, left, value];4808578776;
ideal-ap;IteratorHasNext;r159 @ r159 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();r159 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1238;385;1238;0;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];343415768;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>();r4 = interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30339;1013;30030;309;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1784228408;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;31417;65;31328;89;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1354214928;
ideal-ap;IteratorHasNext;r12 @ r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;60949;192;60858;91;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2063801720;
ideal-ap;IteratorHasNext;r30 @ r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;3158;71;3158;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];343076376;
ideal-ap;IteratorHasNext;r43 @ r43 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r43 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2669;74;2669;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];343187432;
ideal-ap;IteratorHasNext;r16 @ r16 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r16 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2046;57;2046;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];334334144;
ideal-ap;IteratorHasNext;r112 @ r112 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();r112 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;115;82;19;96;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];259159464;
ideal-ap;IteratorHasNext;r14 @ r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1524;52;1524;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];309648672;
ideal-ap;IteratorHasNext;r135 @ r135 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r135 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;true;false;109;72;19;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];259262848;
ideal-ap;IteratorHasNext;r142 @ r142 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();r142 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;1233;727;1233;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];346332416;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1795;79;1795;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];310683440;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueFolding$1;false;false;60226;85;60132;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];317964632;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.ReplaceVisitor;false;true;10829;84;10829;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];554692944;
ideal-ap;IteratorHasNext;r26 @ r26 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();r26 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;60121;62;60028;93;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];511991632;
ideal-ap;IteratorHasNext;r30 @ r30 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r30 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1226;88;1226;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];265076216;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;150869;206;150776;93;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];287528368;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30322;113;30022;300;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];317092928;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;60307;50;60216;91;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];282248992;
ideal-ap;IteratorHasNext;$r26 @ $r26 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();$r26 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;61267;149;60328;939;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];322451328;
ideal-ap;IteratorHasNext;r62 @ r62 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();r62 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1095;33;1095;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];265120392;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1670;41;1670;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];312290552;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2148;42;2148;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];312302456;
ideal-ap;IteratorHasNext;r41 @ r41 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r41 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2077;109;2077;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];345744496;
ideal-ap;IteratorHasNext;r59 @ r59 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r59 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2183;31;2183;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];312460856;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2167;114;2167;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];312346968;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;false;false;151330;5462;150759;571;67;4467;r0[table, array, next, after, before, prev, right, parent, left, value];452475288;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()>;EDU.purdue.cs.bloat.tree.DefExpr;false;false;60121;50;60035;86;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];323019936;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.SSAPRE$1;true;false;60458;123;60366;92;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2187546384;
ideal-ap;IteratorHasNext;r170 @ r170 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();r170 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2311;405;2311;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];353766592;
ideal-ap;IteratorHasNext;r171 @ r171 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();r171 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;37932;8190;37932;0;5;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1674884520;
ideal-ap;IteratorHasNext;$r26 @ $r26 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();$r26 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;60151;150;60028;123;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];317601832;
ideal-ap;IteratorHasNext;r226 @ r226 = interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>();r226 = interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;31293;10396;30461;832;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1945750528;
ideal-ap;IteratorHasNext;r22 @ r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;30208;292;30090;118;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];294686752;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;110;166;23;87;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];260584496;
ideal-ap;IteratorHasNext;r59 @ r59 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();r59 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;30122;563;30027;95;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];410062304;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()>;EDU.purdue.cs.bloat.util.Graph;false;false;60119;80;60023;96;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342648576;
ideal-ap;IteratorHasNext;r63 @ r63 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();r63 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2496;55;2496;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342798056;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1745;93;1745;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];310644696;
ideal-ap;IteratorHasNext;r11 @ r11 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();r11 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60220;349;60099;121;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];369845384;
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;60456;50;60366;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];319233720;
ideal-ap;IteratorHasNext;r179 @ r179 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();r179 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;30149;192;30023;126;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];447525192;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2908;25;2908;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];334526248;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2777;89;2777;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];345431728;
ideal-ap;IteratorHasNext;r20 @ r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;true;false;90168;120;90081;87;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2188668792;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)>;EDU.purdue.cs.bloat.util.Graph;false;false;60340;86;60251;89;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];306748928;
ideal-ap;IteratorHasNext;r154 @ r154 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r154 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;60130;388;60035;95;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];352665464;
ideal-ap;IteratorHasNext;r91 @ r91 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>();r91 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2887;52;2887;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];351802880;
ideal-ap;IteratorHasNext;r50 @ r50 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();r50 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;30395;626;30267;128;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];572896384;
ideal-ap;IteratorHasNext;r104 @ r104 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();r104 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;115;302;21;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];267610448;
ideal-ap;IteratorHasNext;r17 @ r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;60249;36;60156;93;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];309364880;
ideal-ap;IteratorHasNext;r24 @ r24 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r24 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2672;161;2672;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];353803112;
ideal-ap;IteratorHasNext;r169 @ r169 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r169 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;true;1399;197;1399;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];293125152;
ideal-ap;IteratorHasNext;r106 @ r106 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();r106 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;108;247;20;88;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];267542408;
ideal-ap;IteratorHasNext;r59 @ r59 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r59 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2355;88;2355;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];351106984;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;30114;145;30022;92;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];438174904;
ideal-ap;IteratorHasNext;r1 @ r1 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();r1 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;true;2329;63;2329;0;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];350979736;
ideal-ap;IteratorHasNext;r78 @ r78 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();r78 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;60116;101;60028;88;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];432286432;
ideal-ap;IteratorHasNext;r95 @ r95 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();r95 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;true;false;30127;798;30030;97;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1610133800;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;false;false;107;124;19;88;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];270991608;
ideal-ap;IteratorHasNext;r148 @ r148 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();r148 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2333;405;2333;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];355963720;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;90415;95;90316;99;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];885571312;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.DeadCodeElimination$5;false;false;60618;51;60526;92;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1772933360;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1793;33;1793;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];312553256;
ideal-ap;IteratorHasNext;r218 @ r218 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();r218 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;31801;11566;30468;1333;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1973938704;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.ssa.SSA$1;false;false;60356;38;60028;328;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1770922560;
ideal-ap;IteratorHasNext;r76 @ r76 = interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>();r76 = interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;60858;129;60373;485;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];424121656;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30472;147;30376;96;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];763835984;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;98745;2252490;98745;0;785;4467;r0[table, array, next, after, before, prev, right, parent, left, value];3247505744;
ideal-ap;IteratorHasNext;r102 @ r102 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();r102 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;116;357;22;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];259996992;
ideal-ap;IteratorHasNext;r52 @ r52 = interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>();r52 = interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30416;846;30318;98;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1124932176;
ideal-ap;IteratorHasNext;r42 @ r42 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();r42 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3789;225;3789;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];344361592;
ideal-ap;IteratorHasNext;r28 @ r28 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();r28 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;90356;65;90033;323;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];511775848;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;false;false;60451;173;60360;91;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];574549688;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$7;false;false;60275;113;60154;121;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];439194152;
ideal-ap;IteratorHasNext;r95 @ r95 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();r95 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;60529;238;60425;104;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];513437184;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;30151;65;30052;99;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2006707368;
ideal-ap;IteratorHasNext;r38 @ r38 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();r38 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;60116;240;60027;89;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];572357248;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.ssa.SSAConstructionInfo;false;true;1223;51;1223;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342511312;
ideal-ap;IteratorHasNext;r1 @ r1 = specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();r1 = specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.tree.Tree$StmtList;false;true;403075;6888384;403075;0;853;4467;r0[table, array, next, after, before, prev, right, parent, left, value];9335356896;
ideal-ap;IteratorHasNext;r2 @ r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60523;51;60433;90;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];309159320;
ideal-ap;IteratorHasNext;r24 @ r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;60555;75;60028;527;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];500375872;
ideal-ap;IteratorHasNext;r133 @ r133 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();r133 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;60710;52;60619;91;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];308359688;
ideal-ap;IteratorHasNext;r175 @ r175 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();r175 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;true;2854;211;2854;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];335905600;
ideal-ap;IteratorHasNext;r31 @ r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;2194;67;2194;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];334002168;
ideal-ap;IteratorHasNext;r130 @ r130 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();r130 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;30896;333;30028;868;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];815176216;
ideal-ap;IteratorHasNext;r50 @ r50 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r50 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;1904;63;1904;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];338891872;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();r3 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;923;127;923;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];260194912;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.context.BloatContext;true;false;104;71;19;85;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];254797952;
ideal-ap;IteratorHasNext;r66 @ r66 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();r66 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;true;1720;391;1720;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];330594528;
ideal-ap;IteratorHasNext;r57 @ r57 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r57 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2067;153;2067;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];338736880;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;90697;82;90599;98;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];4376751904;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)>;EDU.purdue.cs.bloat.context.PersistentBloatContext;false;false;60547;51;60459;88;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];321247272;
ideal-ap;IteratorHasNext;r43 @ r43 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r43 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;1286;104;1286;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];345067608;
ideal-ap;IteratorHasNext;r76 @ r76 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r76 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60465;121;60376;89;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];324239528;
ideal-ap;IteratorHasNext;r177 @ r177 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();r177 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;true;1310;56;1310;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];285361120;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;3286;147;3286;0;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];344230976;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;true;false;120252;142;120163;89;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2179035016;
ideal-ap;IteratorHasNext;r100 @ r100 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();r100 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;116;412;22;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];259180768;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;60194;92;60075;119;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];324645480;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();r4 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1091;119;1091;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];262354744;
ideal-ap;IteratorHasNext;r223 @ r223 = interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>();r223 = interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;32932;9458;30629;2303;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1870458288;
ideal-ap;IteratorHasNext;r177 @ r177 = interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>();r177 = interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;90739;385;90614;125;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];5164227256;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();r6 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;90239;90;90086;153;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];280009000;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()>;EDU.purdue.cs.bloat.util.Graph;false;false;60270;44;60186;84;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2489118032;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;30166;158;30023;143;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];436011576;
ideal-ap;IteratorHasNext;r5 @ r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1577;178;1577;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];259489256;
ideal-ap;IteratorHasNext;r29 @ r29 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();r29 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;90122;75;90035;87;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];509058368;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;139;71;44;95;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];263362136;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.ReplaceTarget;false;false;60118;86;60030;88;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];2704415488;
ideal-ap;IteratorHasNext;r34 @ r34 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r34 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;30848;77;30067;781;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1282278648;
ideal-ap;IteratorHasNext;r69 @ r69 = interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>();r69 = interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60167;283;60076;91;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];324481160;
ideal-ap;IteratorHasNext;r21 @ r21 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r21 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2245;67;2245;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342457856;
ideal-ap;IteratorHasNext;r74 @ r74 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r74 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;60544;136;60399;145;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];328344512;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;2642;37;2642;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];309666592;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;30125;161;30036;89;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1941596400;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;30138;142;30021;117;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];289391232;
ideal-ap;IteratorHasNext;r64 @ r64 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();r64 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;true;1964;209;1964;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];334592488;
ideal-ap;IteratorHasNext;r135 @ r135 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();r135 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2170;405;2170;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];346161320;
ideal-ap;IteratorHasNext;r38 @ r38 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();r38 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;60557;202;60439;118;7;4467;r0[table, array, next, after, before, prev, right, parent, left, value];3190127496;
ideal-ap;IteratorHasNext;r13 @ r13 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r13 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])>;EDU.purdue.cs.bloat.trans.PersistentCheckElimination;false;true;3126;82;3126;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342521728;
ideal-ap;IteratorHasNext;r17 @ r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;true;1722;39;1722;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];310489856;
ideal-ap;IteratorHasNext;r90 @ r90 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();r90 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;true;1973;214;1973;0;6;4467;r0[table, array, next, after, before, prev, right, parent, left, value];270397664;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;30114;76;30022;92;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];438154296;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1;false;false;60571;67;60036;535;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];328088664;
ideal-ap;IteratorHasNext;r70 @ r70 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();r70 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60537;100;60421;116;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];320268504;
ideal-ap;IteratorHasNext;r96 @ r96 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();r96 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;116;522;22;94;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];260900488;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.Liveness$2;false;false;60331;110;60242;89;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];369298064;
ideal-ap;IteratorHasNext;r27 @ r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;30306;302;30181;125;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];549781672;
ideal-ap;IteratorHasNext;r36 @ r36 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();r36 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;2098;69;2098;0;3;4467;r0[table, array, next, after, before, prev, right, parent, left, value];287835312;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;30164;118;30025;139;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];279118648;
ideal-ap;IteratorHasNext;r55 @ r55 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();r55 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;30300;1281;30198;102;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];1637206656;
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;true;1521;53;1521;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];265758440;
ideal-ap;IteratorHasNext;r26 @ r26 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();r26 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;true;1242;79;1242;0;4;4467;r0[table, array, next, after, before, prev, right, parent, left, value];342889608;
