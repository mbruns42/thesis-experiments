Writing output to file outputDacapo/dacapo.pmd.Main2-ideal-ap-IO.csv
running typestate.impl.statemachines.alloc.InputStreamStateMachine
/Users/johannesspath/Documents/dacapo/pmd/pmd.jar:/Users/johannesspath/Documents/dacapo/pmd/pmd-deps.jar
/Users/johannesspath/Documents/dacapo/pmd/pmd.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jce.jar
[<dacapo.pmd.Main2: void main(java.lang.String[])>]
Application Classes: 554
Reachable Methods3775
Analysing 8 seeds!
Starting with seed in <dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)> $r8 @ specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0)€
Alive tick 18:38:48
Starting with seed in <dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)> $r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5)€
Alive tick 18:38:52
Timeout of IDEAL, Budget:600
Starting with seed in <net.sourceforge.pmd.FileDataSource: java.io.InputStream getInputStream()> $r1 @ specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2)€
Alive tick 18:38:58
Timeout of IDEAL, Budget:600
Starting with seed in <net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)> $r10 @ specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11)€
Alive tick 18:40:01
Starting with seed in <dacapo.pmd.PmdHarness: java.lang.String collectFilesFromFile(java.lang.String)> $r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1)€
Alive tick 18:40:02
Starting with seed in <dacapo.FileDigest: byte[] getBinary(java.io.File)> $r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0)€
Alive tick 18:40:03
Timeout of IDEAL, Budget:600
Starting with seed in <net.sourceforge.pmd.util.ResourceLoader: java.io.InputStream loadResourceAsStream(java.lang.String,java.lang.ClassLoader)> $r7 @ specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r2)€
Alive tick 18:43:49
Starting with seed in <dacapo.FileDigest: byte[] getBinary(java.io.File)> $r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5)€
Alive tick 18:43:49
