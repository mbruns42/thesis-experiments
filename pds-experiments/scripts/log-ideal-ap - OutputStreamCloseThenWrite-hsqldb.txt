Writing output to file outputDacapo/org.hsqldb.hsqldbDoopDriver-ideal-ap-IO.csv
running typestate.impl.statemachines.alloc.OutputStreamStateMachine
/Users/johannesspath/Documents/dacapo/hsqldb/hsqldb.jar:/Users/johannesspath/Documents/dacapo/hsqldb/hsqldb-deps.jar
/Users/johannesspath/Documents/dacapo/hsqldb/hsqldb.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jce.jar
[<org.hsqldb.hsqldbDoopDriver: void main(java.lang.String[])>]
Application Classes: 417
Reachable Methods5923
Analysing 28 seeds!
Starting with seed in <org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>()> r0 @ specialinvoke r0.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>(int)>(128)€
Alive tick 00:33:39
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.scriptio.ScriptWriterText: void initBuffers()> $r1 @ specialinvoke $r1.<org.hsqldb.rowio.RowOutputTextLog: void <init>()>()€
Alive tick 00:34:09
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.Trace: java.lang.String getStackTrace()> $r4 @ specialinvoke $r4.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>()>()€
Alive tick 00:34:39
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.lib.FileUtil: java.io.OutputStream openOutputStreamElement(java.lang.String)> $r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3)€
Alive tick 00:34:44
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.scriptio.ScriptWriterBinary: void initBuffers()> $r1 @ specialinvoke $r1.<org.hsqldb.rowio.RowOutputBinary: void <init>()>()€
Alive tick 00:35:40
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputBinary: void <init>(byte[])> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputBase: void <init>(byte[])>(r1)€
Alive tick 00:35:50
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>(int)> r0 @ specialinvoke r0.<java.io.OutputStream: void <init>()>()€
Alive tick 00:36:01
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputTextLog: void <init>()> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputBase: void <init>()>()€
Alive tick 00:37:40
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.lib.InOutUtil: byte[] serialize(java.io.Serializable)> $r3 @ specialinvoke $r3.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>()>()€
Alive tick 00:40:45
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputBase: void <init>(int)> r0 @ specialinvoke r0.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>(int)>(i0)€
Alive tick 00:50:46
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.persist.DataFileDefrag: int[] writeTableToDataFile(org.hsqldb.Table)> $r8 @ specialinvoke $r8.<org.hsqldb.rowio.RowOutputBinary: void <init>()>()€
Alive tick 00:52:54
Starting with seed in <org.hsqldb.persist.TextCache: void initBuffers()> $r14 @ specialinvoke $r14.<org.hsqldb.rowio.RowOutputText: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>($r18, $r17, $r16, 0, $r15)€
Alive tick 00:52:54
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.persist.DataFileCache: void initBuffers()> $r2 @ specialinvoke $r2.<org.hsqldb.rowio.RowOutputBinary: void <init>(int)>(256)€
Alive tick 00:54:38
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputBinary: void <init>()> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputBase: void <init>()>()€
Alive tick 00:56:25
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.scriptio.ScriptWriterBase: void openFile()> $r5 @ specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 8192)€
Alive tick 00:57:30
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.persist.DataFileDefrag: void process()> $r17 @ specialinvoke $r17.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r72, 4096)€
Alive tick 00:57:46
Starting with seed in <org.hsqldb.lib.InOutUtil: byte[] serialize(java.io.Serializable)> $r4 @ specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1)€
Alive tick 00:57:47
Starting with seed in <org.hsqldb.rowio.RowOutputBase: void <init>()> r0 @ specialinvoke r0.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>()>()€
Alive tick 00:57:47
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputText: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputBase: void <init>()>()€
Alive tick 00:58:15
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputTextQuoted: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputText: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, r2, r3, z0, r4)€
Alive tick 00:59:55
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.scriptio.ScriptWriterZipped: void openFile()> $r5 @ specialinvoke $r5.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int)>(r1, $r6, 32768)€
Alive tick 01:01:30
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.HSQLClientConnection: void initStructures()> $r1 @ specialinvoke $r1.<org.hsqldb.rowio.RowOutputBinary: void <init>(byte[])>($r2)€
Alive tick 01:01:53
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.persist.TextCache: void initBuffers()> $r5 @ specialinvoke $r5.<org.hsqldb.rowio.RowOutputTextQuoted: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>($r9, $r8, $r7, $z2, $r6)€
Alive tick 01:02:19
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputBinary: void <init>(int)> r0 @ specialinvoke r0.<org.hsqldb.rowio.RowOutputBase: void <init>(int)>(i0)€
Alive tick 01:04:07
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.HSQLClientConnection: void openConnection(java.lang.String,int,boolean)> $r5 @ specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7)€
Alive tick 01:06:47
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.rowio.RowOutputBase: void <init>(byte[])> r0 @ specialinvoke r0.<org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>(byte[])>(r1)€
Alive tick 01:07:02
Timeout of IDEAL, Budget:600
Starting with seed in <org.hsqldb.lib.ZipUnzipFile: void compressFile(java.lang.String,java.lang.String,org.hsqldb.lib.FileAccess)> $r4 @ specialinvoke $r4.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int)>($r5, $r6, 65536)€
Alive tick 01:07:27
Starting with seed in <org.hsqldb.lib.HsqlByteArrayOutputStream: void <init>(byte[])> r0 @ specialinvoke r0.<java.io.OutputStream: void <init>()>()€
Alive tick 01:07:27
Timeout of IDEAL, Budget:600
