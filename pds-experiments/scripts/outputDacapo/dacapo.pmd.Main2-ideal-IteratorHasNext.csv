Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath
ideal;IteratorHasNext;ForwardQuery: (validate $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;1641;213;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r4.iterator(),$r5 (LocalScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;190;67;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r21.iterator(),r1 (ClassScope.toString) Value: interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;229;88;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (parseInternallyDefinedRuleNode $r23.iterator(),r8 (RuleSetFactory.parseInternallyDefinedRuleNode) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());r8 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)>;net.sourceforge.pmd.RuleSetFactory;false;false;253;117;8;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (errors $r1.iterator(),$r2 (Report.errors) Value: interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator errors()>;net.sourceforge.pmd.Report;false;false;905;338;10;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getCountSummary $r7.iterator(),r2 (Report.getCountSummary) Value: virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>());r2 = virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getCountSummary()>;net.sourceforge.pmd.Report;false;false;146;85;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (commaSeparate r0.iterator(),r1 (PmdHarness.commaSeparate) Value: interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)>;dacapo.pmd.PmdHarness;false;false;138;58;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (usesDFA $r3.iterator(),r1 (RuleSet.usesDFA) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: boolean usesDFA()>;net.sourceforge.pmd.RuleSet;false;false;89;48;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (parseRuleNodeWithExclude $r11.iterator(),r6 (RuleSetFactory.parseRuleNodeWithExclude) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)>;net.sourceforge.pmd.RuleSetFactory;false;false;99;52;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r29.iterator(),r33 (ClassScope.findVariableHere) Value: interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>());r33 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;81;56;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r15.iterator(),$r16 (ClassScope.toString) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());$r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;122;68;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (markUsages $r11.iterator(),r6 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;124;73;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (apply $r5.iterator(),r3 (RuleSet.apply) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)>;net.sourceforge.pmd.RuleSet;false;false;97;46;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getVariableDeclarations $r5.iterator(),$r6 (MethodScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;80;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (apply $r6.iterator(),r4 (RuleSets.apply) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;85;49;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r4.iterator(),$r5 (MethodScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;66;67;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (usesDFA $r4.iterator(),r2 (RuleSets.usesDFA) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;87;51;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (iterator $r1.iterator(),$r2 (Report.iterator) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator iterator()>;net.sourceforge.pmd.Report;false;false;776;715;14;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (glomSuppressions $r6.iterator(),r3 (HTMLRenderer.glomSuppressions) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;131;119;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getSummary $r5.iterator(),r2 (Report.getSummary) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getSummary()>;net.sourceforge.pmd.Report;false;false;79;55;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getVariableDeclarations $r5.iterator(),$r6 (LocalScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;68;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (processFiles r1.iterator(),r6 (PMD.processFiles) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;87;62;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r42 (TextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r42 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;90;83;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getRuleByName $r4.iterator(),r2 (RuleSet.getRuleByName) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)>;net.sourceforge.pmd.RuleSet;false;false;105;50;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render $r20.iterator(),r94 (XMLRenderer.render) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r94 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;220;66;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (isEmpty $r1.iterator(),$r2 (Report.isEmpty) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: boolean isEmpty()>;net.sourceforge.pmd.Report;false;false;36;16;3;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (addSuppressed $r5.iterator(),r3 (TextRenderer.addSuppressed) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;117;66;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (collect r37.iterator(),r38 (PMD.collect) Value: interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>());r38 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)>;net.sourceforge.pmd.PMD;false;false;95;48;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r23.iterator(),$r24 (ClassScope.findVariableHere) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());$r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;74;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getVariableDeclarations $r5.iterator(),$r6 (ClassScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;60;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (clipPath $r4.iterator(),r2 (IDEAJRenderer$SourcePath.clipPath) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath;true;false;61;61;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;90;61;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r6.iterator(),$r7 (SourceFileScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.SourceFileScope;true;false;87;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (glomIRuleViolations r1.iterator(),r3 (HTMLRenderer.glomIRuleViolations) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;187;122;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (markUsages r3.iterator(),r4 (VariableAccessVisitor.markUsages) Value: interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;157;73;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r10.iterator(),$r11 (ClassScope.findVariableHere) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;86;38;4;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r6.iterator(),$r7 (LocalScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.LocalScope;true;false;84;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r3 (CSVRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.CSVRenderer;false;false;87;68;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r6.iterator(),$r7 (MethodScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.MethodScope;true;false;63;53;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r4.iterator(),$r5 (SourceFileScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.SourceFileScope;true;false;74;67;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (findVariableHere $r5.iterator(),$r6 (ClassScope.findVariableHere) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;62;38;4;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (printRuleNamesInDebug $r3.iterator(),r1 (PMD.printRuleNamesInDebug) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)>;net.sourceforge.pmd.PMD;true;false;61;56;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r74 (XMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r74 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;554;142;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (visit r4.iterator(),r5 (OccurrenceFinder.visit) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)>;net.sourceforge.pmd.symboltable.OccurrenceFinder;false;false;167;54;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;77;57;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r187 (PapariTextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r187 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;486;257;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (toString $r45.iterator(),$r46 (ClassScope.toString) Value: interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>());$r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;163;119;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (getAllRules $r4.iterator(),r2 (RuleSets.getAllRules) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()>;net.sourceforge.pmd.RuleSets;false;false;166;47;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render $r20.iterator(),r191 (PapariTextRenderer.render) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r191 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;true;false;162;143;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (postIterationCleanup $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;51;46;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (markUsages $r20.iterator(),r8 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r8 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;111;99;6;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r3 (EmacsRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.EmacsRenderer;false;false;90;46;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (renderSummary $r11.iterator(),r4 (SummaryHTMLRenderer.renderSummary) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.SummaryHTMLRenderer;true;false;73;70;5;3775;true;false;
ideal;IteratorHasNext;ForwardQuery: (render r1.iterator(),r47 (VBHTMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r47 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.VBHTMLRenderer;false;false;127;102;5;3775;true;false;
